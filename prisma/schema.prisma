generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Models

enum AssetType {
  ACAO
  BDR
  CDB
  COE
  FIIS
  LCI
  LCA
  LC
  MULTIMERCADO
  TESOURODIRETO
  OPCOES
}

enum CurrencyCode {
  BRL
  EUR
  USD
}

enum TransactionType {
  COMPRA
  VENDA
}

model Country {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(300)

  @@map("countries")
}

model User {
  id        Int     @id @default(autoincrement())
  name      String  @db.VarChar(300)
  email     String  @unique @db.VarChar(500)
  cpf       String  @unique @db.VarChar(20)
  avatarUrl String? @db.VarChar()

  Wallet Wallet[]

  @@index([email])
  @@map("users")
}

model Asset {
  id      Int       @id @default(autoincrement())
  name    String    @db.VarChar(500)
  code    String    @unique @db.VarChar(10)
  iconUrl String?   @db.VarChar()
  type    AssetType

  purchasedAssets  PurchasedAsset[]
  calculatedAssets CalculatedAsset[]

  @@index([code])
  @@map("assets")
}

model PurchasedAsset {
  id                      Int             @id @default(autoincrement())
  price                   Decimal         @default(0)
  quantity                Float           @default(0)
  total                   Decimal         @default(0)
  totalFees               Decimal         @default(0)
  apportionmentValue      Decimal         @default(0)
  apportionmentPercentage Float           @default(0)
  date                    DateTime
  month                   Int
  year                    Int
  brokerName              String          @db.VarChar(200)
  transactionType         TransactionType
  currencyCode            CurrencyCode

  assetId  Int
  ticket   Asset   @relation(fields: [assetId], references: [id])
  walletId Int?
  wallet   Wallet? @relation(fields: [walletId], references: [id])

  @@map("purchasedAssets")
}

model CalculatedAsset {
  id              Int             @id @default(autoincrement())
  averagePrice    Decimal         @default(0)
  quantity        Float           @default(0)
  total           Float           @default(0)
  brokerName      String          @db.VarChar(200)
  transactionType TransactionType
  currencyCode    CurrencyCode

  assetId Int
  ticket  Asset @relation(fields: [assetId], references: [id])

  walletId Int?
  Wallet   Wallet? @relation(fields: [walletId], references: [id])

  @@map("calculatedAssets")
}

model Wallet {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(150)
  total        Decimal      @default(0)
  currencyCode CurrencyCode

  purchasedAssets  PurchasedAsset[]
  calculatedAssets CalculatedAsset[]

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@map("wallets")
}
